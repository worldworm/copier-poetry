name: Publish PyPI

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: {{"${{ github.ref_name }}"}}
      - name: Check version consistency
        run: |
          version=$(grep '^version' pyproject.toml | awk '{print $3}' | tr -d '"')
          tag=v$version
          if [ "$tag" != "${GITHUB_REF#refs/tags/}" ]; then
            echo "Error: version in pyproject.toml ($tag) does not match git tag (${GITHUB_REF#refs/tags/})"
            exit 1
          fi
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root --no-interaction --no-ansi --no-dev
      - name: Build package
        run: poetry build
      - name: Publish to PyPI
        run: |
          poetry config pypi-token.pypi {{"${{ secrets.PYPI_TOKEN }}"}}
          poetry publish
      - name: Attach built package to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/{{package_import_name}}-*.tar.gz
            dist/{{package_import_name}}-*-py3-none-any.whl
